# https://taskfile.dev/#/installation
version: 3

tasks:
  test:
    - cmake ./test -B ./test/build -DCMAKE_BUILD_TYPE:STRING=Debug -G "Ninja Multi-Config"
    - cmake --build ./test/build --config Debug
    - cd ./test/build && ctest -C Debug --verbose

  test_release:
    - cmake ./test -B ./test/build -DCMAKE_BUILD_TYPE:STRING=Release -G "Ninja Multi-Config"
    - cmake --build ./test/build --config Release
    - cd ./test/build && ctest -C Release --verbose

  test_install:
      cmds:
      - task: test_release
      - cmake --install ./test/build --config Release --prefix ./install
      - cmake ./test_install -B ./test_install/build -DCMAKE_BUILD_TYPE:STRING=Release -G "Ninja Multi-Config" -DCMAKE_PREFIX_PATH:STRING={{.CWD}}/install;
      - cmake --build ./test_install/build --config Release
      - cd ./test_install/build && ctest -C Release --verbose
      vars:
        CWD:
          sh: git rev-parse --show-toplevel

  format:
    - clang-format -i ./test/*.cpp ./test/include/mylib/*.hpp ./test_install/*.cpp
    - cmake-format --in-place ./Index.cmake ./src/*.cmake ./test/CMakeLists.txt ./test_install/CMakeLists.txt

  lint: cmake-lint ./Index.cmake ./src/*.cmake

  clean: |
    {{if eq OS "windows"}} 
      powershell -c 'function rmrf($path) { if (test-path $path) { rm -r -force $path }}; rmrf ./test/build; rmrf ./test_install/build/; rmrf ./install'
    {{else}} 
      rm -rf ./test/build ./test_install/build/ ./install
    {{end}}
