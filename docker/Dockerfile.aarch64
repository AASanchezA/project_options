FROM ubuntu:22.04 AS base

ARG setup_cpp_linux_version="0.24.1"

# add setup_cpp https://github.com/aminya/setup-cpp
ADD https://github.com/aminya/setup-cpp/releases/download/v${setup_cpp_linux_version}/setup_cpp_linux /setup_cpp_linux
RUN chmod +x /setup_cpp_linux



FROM base AS setup

# install cmake, ninja, and ccache
RUN /setup_cpp_linux --clangtidy true --clangformat true --cmake true --ninja true --ccache true --cppcheck true --vcpkg true --conan true --task true 

RUN apt-get update && apt-get install -y \
    g++-aarch64-linux-gnu gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu \
    && rm -rf /var/lib/apt/lists/*

COPY ./docker/entrypoint.sh /docker-entrypoint.sh
ENTRYPOINT [ "/docker-entrypoint.sh" ]


FROM setup AS build
COPY . /home/project_options
WORKDIR /home/project_options
CMD ["/bin/bash", "-c", "task rpi4:build.cross"]

FROM setup AS build-release
COPY . /home/project_options
WORKDIR /home/project_options
CMD ["/bin/bash", "-c", "task rpi4:build.cross.release"]

FROM setup AS build-vcpkg
COPY . /home/project_options
WORKDIR /home/project_options
CMD ["/bin/bash", "-c", "task rpi4-vcpkg:build.cross"]

FROM setup AS build-custom
COPY . /home/project_options
WORKDIR /home/project_options
CMD ["/bin/bash", "-c", "task rpi4:build.cross.custom-toolchain"]


FROM setup AS test
RUN apt-get update && apt-get install -y \
    qemu-user \
    && rm -rf /var/lib/apt/lists/*
COPY . /home/project_options
WORKDIR /home/project_options
ENV QEMU_LD_PREFIX /usr/aarch64-linux-gnu
CMD ["/bin/bash", "-c", "task rpi4:build.cross.release && qemu-aarch64 /home/project_options/tests/rpi4/build/Release/example"]
